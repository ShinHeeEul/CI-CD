name: 'CI'

on:
  push:
    branches: ['main', 'mytest']
  pull_request:
    branches: ['main']
  issue_comment:
    types: [created]

jobs:
  tests:
    if: contains(github.event.comment.body, '테스트 실패')
    runs-on: ubuntu-latest
      # Repository로부터 CI 수행 서버로 코드를 내려받는 Action
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        # jdk를 다운 받고 캐싱해주는 Action
        uses: actions/setup-java@v3
        # Action에 전달하는 input을 정의하는 곳
        with:
          java-version: 17
          distribution: 'temurin'
    steps:
      - name: test
        run:


  ci:
    runs-on: ubuntu-latest
    steps:
      # Repository로부터 CI 수행 서버로 코드를 내려받는 Action
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        # jdk를 다운 받고 캐싱해주는 Action
        uses: actions/setup-java@v3
        # Action에 전달하는 input을 정의하는 곳
        with:
          java-version: 17
          distribution: 'temurin'


     # Gradle을 이용해 빌드하고 CI 속도를 높히기 위하여 의존하는 라이브러리들을 캐싱
      - uses: actions/cache@v3

        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # gradle/gradle-build-action을 이용하기
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/mytest' }}
